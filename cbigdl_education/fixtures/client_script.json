[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Examination Marks Entry",
  "enabled": 1,
  "modified": "2023-06-15 10:25:06.545452",
  "module": "Cbigdl Education",
  "name": "Student Marks",
  "script": "frappe.ui.form.on('Examination Marks Entry', {\n\trefresh(frm) {\n\t\tvar admissionNumbers = frm.doc.student_marks.map(function(row) {\n            return row.admission_number;\n        });\n\n        // Set query filter for the admission_number field\n        frm.fields_dict.student_marks.grid.get_field('admission_number').get_query = function(doc) {\n            return {\n                filters: {\n                    'name': ['not in', admissionNumbers]\n                }\n            };\n        };\n\t}\n})\n\nfrappe.ui.form.on('Student Marks', {\n\trefresh: function(frm, cdt, cdn) {\n\t\tfrm.set_query('admission_number', function() {\n            return {\n                filters: {\n                    'status': 1\n                }\n            };\n        });\n\t},\n\tstatus: function(frm, cdt, cdn) {\n\t    let item = locals[cdt][cdn];\n        frappe.call({\n\t\t\tmethod: 'cbigdl_education.cbigdl_education.doctype.examination_marks_entry.examination_marks_entry.get_grade',\n\t\t\targs: {\n\t\t\t\t'cat_marks':item.cat_marks,\n\t\t\t\t'exam_marks':item.exam_marks,\n\t\t\t\t'grade_format':frm.doc.grade_format\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tlet student_name=r.message\n\t\t\t\tfrappe.model.set_value(cdt,cdn,\"total_marks\",student_name[1])\n\t\t\t\tfrappe.model.set_value(cdt,cdn,\"grade\",student_name[0])\n\t\t\t}\n\t\t});\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Grading Configuration",
  "enabled": 1,
  "modified": "2023-06-15 10:33:23.819981",
  "module": "Cbigdl Education",
  "name": "Grading System",
  "script": "frappe.ui.form.on('Grading Configuration', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n})\n\nfrappe.ui.form.on('Grade Format', {\n\t\n\tmax_scale:function(frm, cdt, cdn){\n\t    let item = locals[cdt][cdn];\n\t\tif (item.max_scale > 100) {\n\t\t\tfrappe.model.set_value(cdt, cdn, 'max_scale', 100);\n\t\t\tfrappe.throw('Maximum scale cannot be more than 100.');\n\t\t}\n\t\tlet row = frm.doc.grade_formats.find(row => row.name === item.name);\n\n\t\tif (row && item.min_scale <= row.min_scale) {\n\t\t\tfrappe.model.set_value(cdt, cdn, 'max_scale', row.min_scale - 1);\n\t\t\tfrappe.throw('Maximum scale must be less than the next row\\'s minimum scale minus 1.');\n\t\t}\n\t},\n\t\tmin_scale:function(frm, cdt, cdn){\n    \t    let item = locals[cdt][cdn];\n    \t\tif (item.min_scale < 0) {\n    \t\t\tfrappe.model.set_value(cdt, cdn, 'min_scale', 0);\n    \t\t\tfrappe.throw('Minimum scale cannot be less than 0.');\n    \t\t}\n    \t\t\n\t}\n})",
  "view": "Form"
 }
]
